<class>
<keyword> class </keyword>
<identifier> Main class defined None </identifier>
<symbol> { </symbol>
<subroutineDec>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> main subroutine defined None </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<varDec>
<keyword> var </keyword>
<identifier> Array class used None </identifier>
<identifier> a var defined 0 </identifier>
<symbol> ; </symbol>
</varDec>
<varDec>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> length var defined 1 </identifier>
<symbol> ; </symbol>
</varDec>
<varDec>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> i var defined 2 </identifier>
<symbol> , </symbol>
<identifier> sum var defined 3 </identifier>
<symbol> ; </symbol>
</varDec>
<statements>
<letStatement>
<keyword> let </keyword>
<identifier> length var used 1 </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> Keyboard class used None </identifier>
<symbol> . </symbol>
<identifier> readInt subroutine used None </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<stringConstant> HOW MANY NUMBERS?  </stringConstant>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<letStatement>
<keyword> let </keyword>
<identifier> a var used 0 </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> Array class used None </identifier>
<symbol> . </symbol>
<identifier> new subroutine used None </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier> length var used 1 </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<letStatement>
<keyword> let </keyword>
<identifier> i var used 2 </identifier>
<symbol> = </symbol>
<expression>
<term>
<integerConstant> 0 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<whileStatement>
<keyword> while </keyword>
<symbol> ( </symbol>
<expression>
<term>
<identifier> i var used 2 </identifier>
</term>
<symbol> &lt; </symbol>
<term>
<identifier> length var used 1 </identifier>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<letStatement>
<keyword> let </keyword>
<identifier> a var used 0 </identifier>
<symbol> [ </symbol>
<expression>
<term>
<identifier> i var used 2 </identifier>
</term>
</expression>
<symbol> ] </symbol>
<symbol> = </symbol>
<expression>
<term>
<identifier> Keyboard class used None </identifier>
<symbol> . </symbol>
<identifier> readInt subroutine used None </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<stringConstant> ENTER THE NEXT NUMBER:  </stringConstant>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<letStatement>
<keyword> let </keyword>
<identifier> i var used 2 </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> i var used 2 </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
</statements>
<symbol> } </symbol>
</whileStatement>
<letStatement>
<keyword> let </keyword>
<identifier> i var used 2 </identifier>
<symbol> = </symbol>
<expression>
<term>
<integerConstant> 0 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<letStatement>
<keyword> let </keyword>
<identifier> sum var used 3 </identifier>
<symbol> = </symbol>
<expression>
<term>
<integerConstant> 0 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<whileStatement>
<keyword> while </keyword>
<symbol> ( </symbol>
<expression>
<term>
<identifier> i var used 2 </identifier>
</term>
<symbol> &lt; </symbol>
<term>
<identifier> length var used 1 </identifier>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<letStatement>
<keyword> let </keyword>
<identifier> sum var used 3 </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> sum var used 3 </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> a var used 0 </identifier>
<symbol> [ </symbol>
<expression>
<term>
<identifier> i var used 2 </identifier>
</term>
</expression>
<symbol> ] </symbol>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<letStatement>
<keyword> let </keyword>
<identifier> i var used 2 </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> i var used 2 </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
</statements>
<symbol> } </symbol>
</whileStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Output class used None </identifier>
<symbol> . </symbol>
<identifier> printString subroutine used None </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<stringConstant> THE AVERAGE IS:  </stringConstant>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Output class used None </identifier>
<symbol> . </symbol>
<identifier> printInt subroutine used None </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier> sum var used 3 </identifier>
</term>
<symbol> / </symbol>
<term>
<identifier> length var used 1 </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Output class used None </identifier>
<symbol> . </symbol>
<identifier> println subroutine used None </identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<symbol> } </symbol>
</class>